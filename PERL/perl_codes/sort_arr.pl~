#!/usr/bin/perl
use strict;
use warnings;
# Sample array
my @array = (34, 7, 23, 32, 5, 62);
print "array:@array\n";
# Bubble Sort using a 'for' loop
my @bubble_array = @array;
for (my $i = 0; $i < @bubble_array - 1; $i++) {
    for (my $j = 0; $j < @bubble_array - $i - 1; $j++) {
        if ($bubble_array[$j] > $bubble_array[$j + 1]) {
            # Swap
            my $temp = $bubble_array[$j];
            $bubble_array[$j] = $bubble_array[$j + 1];
            $bubble_array[$j + 1] = $temp;
        }
    }
}
print "Bubble Sorted array: @bubble_array\n\n";
=begin

# Selection Sort using a 'foreach' loop
print "Selection Sort:\n";
my @selection_array = @array;
foreach my $i (0 .. $#selection_array - 1) {
    my $min_index = $i;
    foreach my $j ($i + 1 .. $#selection_array) {
        if ($selection_array[$j] < $selection_array[$min_index]) {
            $min_index = $j;
        }
    }
    # Swap
    my $temp = $selection_array[$i];
    $selection_array[$i] = $selection_array[$min_index];
    $selection_array[$min_index] = $temp;
}
print "Sorted array: @selection_array\n\n";

# Insertion Sort using a 'while' loop
print "Insertion Sort:\n";
my @insertion_array = @array;
my $i = 1;
while ($i < @insertion_array) {
    my $key = $insertion_array[$i];
    my $j = $i - 1;
    while ($j >= 0 && $insertion_array[$j] > $key) {
        $insertion_array[$j + 1] = $insertion_array[$j];
        $j--;
    }
    $insertion_array[$j + 1] = $key;
    $i++;
}
print "Sorted array: @insertion_array\n\n";

# Quick Sort using recursion
print "Quick Sort:\n";
sub quick_sort {
    my @arr = @_;
    return @arr if @arr < 2;
    my $pivot = pop @arr;
    my @left = grep { $_ <= $pivot } @arr;
    my @right = grep { $_ > $pivot } @arr;
    return (quick_sort(@left), $pivot, quick_sort(@right));
}
my @quick_array = quick_sort(@array);
print "Sorted array: @quick_array\n";
=cut
